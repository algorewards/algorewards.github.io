{"version":3,"sources":["modules/TextDiv.js","modules/TitleDiv.js","modules/StatisticDiv.js","modules/StatisticDivTimer.js","modules/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["TextDiv","props","className","children","TitleDiv","titleText","SI_SYMBOL","abbreviateNumber","number","tier","Math","log10","abs","suffix","pow","toFixed","StatisticDiv","useState","isNaN","value","toLocaleString","heading","StatisticDivTimer","datestring","setDateString","useEffect","myInterval","setInterval","ms","daysms","hoursms","minutesms","floor","dhm","Date","parse","now","clearInterval","toString","replaceAll","replace","Calculator","totalStake","rewards","field","setField","calculatePart","userStake","calculateReward","per","onChange","e","target","min","loaded","data","total_committed_stake","parseFloat","algo_amount_in_reward_pool","toPrecision","start_datetime","end_datetime","App","setData","setLoaded","period","setPeriod","fetch","then","response","json","style","fontFamily","selected","governor_count","parseInt","color","margin","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8072cbab.chunk.js","sourcesContent":["export function TextDiv(props) {\n    return (\n        <div className=\"App-section App-justify\">\n            <div className=\"App-section-text\">\n                { props.children }\n            </div>\n        </div>\n    )\n}","export function TitleDiv(props) {\n    return (\n        <header className=\"App-center App-section\">\n            <div className=\"App-subheader-text\">\n                { props.titleText }\n            </div>\n        </header>\n    )\n}","import React, { useState } from 'react';\n\nvar SI_SYMBOL = [\"\", \"k\", \"M\", \"B\"];\n\nfunction abbreviateNumber(number){\n\n    // what tier? (determines SI symbol)\n    var tier = Math.log10(Math.abs(number)) / 3 | 0;\n\n    // if zero, we don't need a suffix\n    if(tier == 0) return number;\n\n    if(tier > 3) {\n        tier = 3;\n    }\n\n    // get suffix and determine scale\n    var suffix = SI_SYMBOL[tier];\n    var scale = Math.pow(10, tier * 3);\n\n    // scale the number\n    var scaled = number / scale;\n\n    // format number and add suffix\n    return scaled.toFixed(1) + suffix;\n}\nexport function StatisticDiv(props) {\n\n    const [value, setValue] = useState(0);\n\n    return (\n    <div className=\"App-parent\">\n        <div className=\"App-statistics-body \">\n            { isNaN(props.value) ? props.value : abbreviateNumber(props.value.toLocaleString()) }\n        </div>\n        <div className=\"App-statistics-head\"> \n            {props.heading}\n        </div>\n        \n    </div>    )\n}","import React, { useState, useEffect } from 'react';\n\nfunction dhm (ms) {\n    const days = Math.floor(ms / (24*60*60*1000));\n    const daysms = ms % (24*60*60*1000);\n    const hours = Math.floor(daysms / (60*60*1000));\n    const hoursms = ms % (60*60*1000);\n    const minutes = Math.floor(hoursms / (60*1000));\n    const minutesms = ms % (60*1000);\n    const sec = Math.floor(minutesms / 1000);\n    return days + \":\" + hours + \":\" + minutes + \":\" + sec;\n}\n  \nexport function StatisticDivTimer(props) {\n\n    const [datestring, setDateString] = useState(0);\n\n    useEffect(()=>{\n        let myInterval = setInterval(() => {\n            setDateString(\n                dhm(Date.parse(props.value) - Date.now())\n            )      \n        }, 100)\n            return ()=> {\n                clearInterval(myInterval);\n              };\n        });\n\n    return (\n    <div>\n        <div className=\"App-statistics-body \">\n            { datestring ? datestring.toString().replaceAll(\"-\",\"\") : props.value.toString().replace(\"-\",\"\")}\n        </div>\n        <div className=\"App-statistics-head\"> \n            {((Date.parse(props.value) - Date.now()) > 0) ? props.heading : \"Time elapsed since (D:H:M:S)\"}\n        </div>\n        \n    </div>    )\n}","import React, { useState } from 'react';\nimport { TitleDiv } from \"./TitleDiv\"\nimport { StatisticDiv } from \"./StatisticDiv\"\n\nexport function Calculator(props) {\n\n  const [field, setField] = useState(0);\n\n  const calculatePart = (userStake, totalStake) => {\n    return userStake/totalStake;\n  }\n\n  const calculateReward = (userStake, totalStake, rewards) => {\n    return calculatePart(userStake, totalStake) * rewards;\n  }\n  const getDuration = (startTime, endTime) => {\n    return  (Date.parse(endTime) - Date.parse(startTime));\n  }\n  const calculateNonCAPY = (startTime, endTime, totalStake, rewards) => {\n\n    return (((calculateReward(1, totalStake, rewards) )*4.0) *100);\n  }\n  const stakingReward = (startTime, endTime, totalStake) =>  {\n    return (getDuration(startTime, endTime) * 3.17098e-11 * 0.048 * totalStake);\n  }\n\n  return (\n    <div>\n      <TitleDiv titleText={`Governance Period #${props.per} Calculator`}/>\n      <div className=\"App-center App-section\">\n          <label>\n              Algos Commited:\n              <input value={(field >= 0) ? field : 0} onChange={e => setField(e.target.value)} min=\"0\"/>\n              ALGO        \n          </label>\n      </div>\n\n      <div className=\"App-section App-container\">\n        <div className=\"App-half App-half-left App-center\">\n          <StatisticDiv heading=\"Governance reward\" value= {props.loaded ? calculateReward(field, props.data.total_committed_stake/1000000, parseFloat(props.data.algo_amount_in_reward_pool)/1000000) : \"..loading\"}/>\n        </div>\n        <div className=\"App-half App-center\">\n          <StatisticDiv heading=\"Percentage of Governance Stake\" value={props.loaded ? \"\" + (calculatePart(field, props.data.total_committed_stake/1000000) * 100).toPrecision(4) + \"%\" : \"..loading\"}/>\n        </div>\n        \n        <div className=\"App-half App-half-left App-center\">\n          <StatisticDiv heading=\"Governance APY%\" value= {props.loaded ? calculateNonCAPY(props.data.start_datetime, props.data.end_datetime , props.data.total_committed_stake/1000000, parseFloat(props.data.algo_amount_in_reward_pool)/1000000) : \"..loading\"}/>\n        </div>\n        <div className=\"App-half App-center\">\n        <StatisticDiv heading=\"Total Algo After Period\" value={props.loaded ?  calculateReward(field, props.data.total_committed_stake/1000000, parseFloat(props.data.algo_amount_in_reward_pool)/1000000) + parseFloat(field): \"..loading\"}/>\n        </div>\n\n      </div>\n    </div>\n  )\n} ","import './App.css';\nimport React, { useState, useEffect } from 'react';\n\n\nimport { Navbar } from './modules/Navbar'\nimport { TextDiv } from './modules/TextDiv'\nimport { FieldDiv } from './modules/FieldDiv'\nimport {  TitleDiv } from './modules/TitleDiv'\nimport { StatisticDiv } from \"./modules/StatisticDiv\"\nimport { StatisticDivTimer } from \"./modules/StatisticDivTimer\"\nimport { Calculator } from \"./modules/Calculator\"\n\n\n\nfunction dhm (ms) {\n  const days = Math.floor(ms / (24*60*60*1000));\n  const daysms = ms % (24*60*60*1000);\n  const hours = Math.floor(daysms / (60*60*1000));\n  const hoursms = ms % (60*60*1000);\n  const minutes = Math.floor(hoursms / (60*1000));\n  const minutesms = ms % (60*1000);\n  const sec = Math.floor(minutesms / 1000);\n  return days + \":\" + hours + \":\" + minutes + \":\" + sec;\n}\n\nfunction App() {\n  var response = 0;\n\n  const [data, setData] = useState(0);\n  const [loaded, setLoaded] = useState(0);\n  const [period, setPeriod] = useState(3);\n\n  useEffect(() => {\n    fetch(`https://governance.algorand.foundation/api/periods/governance-period-${period}/`)\n    .then(response => response.json())\n    .then(response => {\n      setLoaded(true);\n      setData(response);\n    });\n  \n  }, [])\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n            <div className=\"App-header-text\">\n              Simple Governance Period \n              <select value={period} onChange={ e => {fetch(`https://governance.algorand.foundation/api/periods/governance-period-${e.target.value}/`)\n    .then(response => response.json())\n    .then(response => {\n      setLoaded(true);\n      setData(response);\n    }); setPeriod(e.target.value); }}>\n              <optgroup style={{fontFamily:'JetBrains Mono'}}>\n                <option selected value=\"1\">#1</option>\n                <option value=\"2\">#2</option>\n                <option value=\"3\">#3</option>\n              </optgroup>\n              </select>\n               Calculator\n            \n            </div>\n          </header>\n      <TextDiv>\n        I was annoyed there was no tool for calculating governance rewards, so enjoy this simple Github-hosted tool. All data is fetched from the Foundation API, and all calculations are done according to information from the Foundation.\n      </TextDiv>\n      \n      <Calculator loaded={loaded} data={data} per={period}/>\n      <div>\n        <TitleDiv titleText={`Governance Period #${period} Statistics`}/>\n\n        <div className=\"App-section App-container\">\n          <div className=\"App-half App-half-left App-center\">\n            <StatisticDiv heading=\"TotalGovernor Count\" value= {loaded ? data.governor_count : \"..loading\"}/>\n          </div>\n          <div className=\"App-half App-center\">\n            <StatisticDiv heading=\"Total Reward Pool\" value={loaded ? parseInt(data.algo_amount_in_reward_pool)/1000000 : \"..loading\"}/>\n          </div>\n          \n          <div className=\"App-half App-half-left App-center\">\n            <StatisticDivTimer heading=\"Time left (D:H:M:S)\" value= {loaded ? data.end_datetime : \"..loading\"}/>\n          </div>\n          <div className=\"App-half App-center\">\n            <StatisticDiv heading=\"Total Algo Staked\" value={loaded ? parseInt(data.total_committed_stake/1000000)  : \"..loading\"}/>\n          </div>\n          <div className=\"App-half App-half-left App-center\"><p style={{color: 'white', margin: 0, fontSize: 0}}>I DONT KNOW WHY THIS DOESNT WORK WITHOUT THIS SEND HELP</p></div>\n          <div className=\"App-half App-center\"></div>\n          \n        </div>\n      </div>\n      <div className=\"mobilefix\">\n        <TextDiv className=\"App-small\">\n          If you have suggestions for any improvements, or find any mistakes contact me on Github. This tool was developed in my free time, feel free to drop some change into my ALGO wallet: NDHX5LVEWPC2FY2SSDXNM2VYFVPWTPKSUILU3MCQVZMIQOOPKYT7X4AD2M\n        </TextDiv>\n      </div>\n      <br/> \n      <TextDiv className=\"App-small\">\n        Zvono Bednarcik 2021\n      </TextDiv>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}